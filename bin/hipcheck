#!/usr/bin/env node

/**
 * Module dependencies.
 */
var program = require('commander');
var redis = require('redis');

var fs = require('fs');
var path = require('path');
var pkg = JSON.parse(
  fs.readFileSync(
    path.join(__dirname, '..', 'package.json')
  )
);
var Url = require('url');
var throwError = require('../lib/throwError');
var clone = require('clone');
var VhostChecker = require('../lib/VhostChecker');

var Hipcheck = require('../lib/Hipcheck');

program
  .version(pkg.version)
  .usage('[options] <url ...>')
  // .option('-d, --dryrun',
  //   'Enable dryrun (health check simulation). Default: false')
  .option('-m, --method',
    'URL Method to health check eg. GET. Default: GET')
  .option('-s, --expected_status',
    'Expected response status code. Default: 200')
  .option('-t, --timeout <n>',
    'Max timeout in seconds for a healthy response. Default: 3', parseFloat)
  .option('-i, --interval <n>',
    'Interval in seconds of how often to ping the domain. Default: 3', parseFloat)
  .option('-c, --hosts_check_interval <n>',
    'Interval in seconds of how often to check for host changes. Default: 3', parseFloat)
  .option('-r, --redis',
    "Hipache's redis host (hostname:port). Default: localhost:6379")
  .option('-p, --redis_password',
    "Hipache's redis database password")
  .option('-e, --rollbar_token',
    "Rollbar token for error tracking");

program.parse(process.argv);

program.url = program.args[0];

var hipcheck = new Hipcheck(program);

// Start
hipcheck.start();

// End on Process Exit
process.on('exit', function () {
  hipcheck.stop();
});